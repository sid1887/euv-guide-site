---
title: "12 — Interactive Labs: Rayleigh and Throughput"
format:
  html:
    code-tools: true
    code-fold: true
---

## Rayleigh Resolution Explorer (Python)

```{python}
import numpy as np
import plotly.express as px
from ipywidgets import interact, FloatSlider

lambda_nm_default = 13.5

def plot_cd(k1=0.32, wavelength=13.5):
    NA = np.linspace(0.1, 0.65, 200)
    CD = k1 * wavelength / NA
    fig = px.line(x=NA, y=CD, labels={'x':'NA', 'y':'CD (nm)'}, title=f'CD vs NA (λ={wavelength} nm, k1={k1:.2f})')
    fig.update_layout(template='plotly_white')
    fig.show()

interact(plot_cd,
         k1=FloatSlider(value=0.32, min=0.2, max=0.6, step=0.02),
         wavelength=FloatSlider(value=13.5, min=10.0, max=20.0, step=0.5))
```

## Throughput vs Die Size vs Utilization (Python)

```{python}
import pandas as pd
import plotly.express as px

df = pd.read_csv('../data/throughput_grid.csv')
df['chips_day'] = df['wafers_per_hour'] * 24 * (1e6 / df['die_area_mm2']) * (df['utilization_percent'] / 100.0)
fig = px.scatter(df, x='die_area_mm2', y='chips_day', color='wafers_per_hour', size='utilization_percent',
                 labels={'die_area_mm2':'Die area (mm²)', 'chips_day':'Chips/day'},
                 title='Chips/day vs Die Area')
fig.update_layout(template='plotly_white')
fig.show()
```

> Tip: Enable a Python environment to execute these cells, or view static output when pre-rendered.